from pathlib import Path
from typing import List
import mido
from mido import Message, MetaMessage, MidiFile, MidiTrack, second2tick
from app.models import Chord


TICKS_PER_BEAT = 480

def chord_to_midi_notes(chord):
    # 暫定的にchordとmidiノートの対応を用意
    chord_map = {"N":[],'C:maj': [60, 64, 67, 48], 'C:maj/3': [64, 60, 67, 52], 'C:maj/5': [67, 60, 64, 55], 'C#:maj': [61, 65, 68, 49], 'C#:maj/3': [65, 61, 68, 53], 'C#:maj/5': [68, 61, 65, 56], 'Db:maj': [61, 65, 68, 49], 'Db:maj/3': [65, 61, 68, 53], 'Db:maj/5': [68, 61, 65, 56], 'D:maj': [62, 66, 69, 50], 'D:maj/3': [66, 62, 69, 54], 'D:maj/5': [69, 62, 66, 57], 'D#:maj': [63, 67, 70, 51], 'D#:maj/3': [67, 63, 70, 55], 'D#:maj/5': [70, 63, 67, 58], 'Eb:maj': [63, 67, 70, 51], 'Eb:maj/3': [67, 63, 70, 55], 'Eb:maj/5': [70, 63, 67, 58], 'E:maj': [64, 68, 71, 52], 'E:maj/3': [68, 64, 71, 56], 'E:maj/5': [71, 64, 68, 59], 'F:maj': [65, 69, 72, 53], 'F:maj/3': [69, 65, 72, 57], 'F:maj/5': [72, 65, 69, 60], 'F#:maj': [66, 70, 73, 54], 'F#:maj/3': [70, 66, 73, 58], 'F#:maj/5': [73, 66, 70, 61], 'Gb:maj': [66, 70, 73, 54], 'Gb:maj/3': [70, 66, 73, 58], 'Gb:maj/5': [73, 66, 70, 61], 'G:maj': [67, 71, 74, 55], 'G:maj/3': [71, 67, 74, 59], 'G:maj/5': [74, 67, 71, 62], 'G#:maj': [68, 72, 75, 56], 'G#:maj/3': [72, 68, 75, 60], 'G#:maj/5': [75, 68, 72, 63], 'Ab:maj': [68, 72, 75, 56], 'Ab:maj/3': [72, 68, 75, 60], 'Ab:maj/5': [75, 68, 72, 63], 'A:maj': [69, 73, 76, 57], 'A:maj/3': [73, 69, 76, 61], 'A:maj/5': [76, 69, 73, 64], 'A#:maj': [70, 74, 77, 58], 'A#:maj/3': [74, 70, 77, 62], 'A#:maj/5': [77, 70, 74, 65], 'Bb:maj': [70, 74, 77, 58], 'Bb:maj/3': [74, 70, 77, 62], 'Bb:maj/5': [77, 70, 74, 65], 'B:maj': [71, 75, 78, 59], 'B:maj/3': [75, 71, 78, 63], 'B:maj/5': [78, 71, 75, 66], 'C:min': [60, 63, 67, 48], 'C:min/3': [63, 60, 67, 51], 'C:min/5': [67, 60, 63, 55], 'C#:min': [61, 64, 68, 49], 'C#:min/3': [64, 61, 68, 52], 'C#:min/5': [68, 61, 64, 56], 'Db:min': [61, 64, 68, 49], 'Db:min/3': [64, 61, 68, 52], 'Db:min/5': [68, 61, 64, 56], 'D:min': [62, 65, 69, 50], 'D:min/3': [65, 62, 69, 53], 'D:min/5': [69, 62, 65, 57], 'D#:min': [63, 66, 70, 51], 'D#:min/3': [66, 63, 70, 54], 'D#:min/5': [70, 63, 66, 58], 'Eb:min': [63, 66, 70, 51], 'Eb:min/3': [66, 63, 70, 54], 'Eb:min/5': [70, 63, 66, 58], 'E:min': [64, 67, 71, 52], 'E:min/3': [67, 64, 71, 55], 'E:min/5': [71, 64, 67, 59], 'F:min': [65, 68, 72, 53], 'F:min/3': [68, 65, 72, 56], 'F:min/5': [72, 65, 68, 60], 'F#:min': [66, 69, 73, 54], 'F#:min/3': [69, 66, 73, 57], 'F#:min/5': [73, 66, 69, 61], 'Gb:min': [66, 69, 73, 54], 'Gb:min/3': [69, 66, 73, 57], 'Gb:min/5': [73, 66, 69, 61], 'G:min': [67, 70, 74, 55], 'G:min/3': [70, 67, 74, 58], 'G:min/5': [74, 67, 70, 62], 'G#:min': [68, 71, 75, 56], 'G#:min/3': [71, 68, 75, 59], 'G#:min/5': [75, 68, 71, 63], 'Ab:min': [68, 71, 75, 56], 'Ab:min/3': [71, 68, 75, 59], 'Ab:min/5': [75, 68, 71, 63], 'A:min': [69, 72, 76, 57], 'A:min/3': [72, 69, 76, 60], 'A:min/5': [76, 69, 72, 64], 'A#:min': [70, 73, 77, 58], 'A#:min/3': [73, 70, 77, 61], 'A#:min/5': [77, 70, 73, 65], 'Bb:min': [70, 73, 77, 58], 'Bb:min/3': [73, 70, 77, 61], 'Bb:min/5': [77, 70, 73, 65], 'B:min': [71, 74, 78, 59], 'B:min/3': [74, 71, 78, 62], 'B:min/5': [78, 71, 74, 66], 'C:7': [60, 64, 67, 70, 48], 'C:7/3': [64, 60, 67, 70, 52], 'C:7/5': [67, 60, 64, 70, 55], 'C:7/7': [70, 60, 64, 67, 58], 'C#:7': [61, 65, 68, 71, 49], 'C#:7/3': [65, 61, 68, 71, 53], 'C#:7/5': [68, 61, 65, 71, 56], 'C#:7/7': [71, 61, 65, 68, 59], 'Db:7': [61, 65, 68, 71, 49], 'Db:7/3': [65, 61, 68, 71, 53], 'Db:7/5': [68, 61, 65, 71, 56], 'Db:7/7': [71, 61, 65, 68, 59], 'D:7': [62, 66, 69, 72, 50], 'D:7/3': [66, 62, 69, 72, 54], 'D:7/5': [69, 62, 66, 72, 57], 'D:7/7': [72, 62, 66, 69, 60], 'D#:7': [63, 67, 70, 73, 51], 'D#:7/3': [67, 63, 70, 73, 55], 'D#:7/5': [70, 63, 67, 73, 58], 'D#:7/7': [73, 63, 67, 70, 61], 'Eb:7': [63, 67, 70, 73, 51], 'Eb:7/3': [67, 63, 70, 73, 55], 'Eb:7/5': [70, 63, 67, 73, 58], 'Eb:7/7': [73, 63, 67, 70, 61], 'E:7': [64, 68, 71, 74, 52], 'E:7/3': [68, 64, 71, 74, 56], 'E:7/5': [71, 64, 68, 74, 59], 'E:7/7': [74, 64, 68, 71, 62], 'F:7': [65, 69, 72, 75, 53], 'F:7/3': [69, 65, 72, 75, 57], 'F:7/5': [72, 65, 69, 75, 60], 'F:7/7': [75, 65, 69, 72, 63], 'F#:7': [66, 70, 73, 76, 54], 'F#:7/3': [70, 66, 73, 76, 58], 'F#:7/5': [73, 66, 70, 76, 61], 'F#:7/7': [76, 66, 70, 73, 64], 'Gb:7': [66, 70, 73, 76, 54], 'Gb:7/3': [70, 66, 73, 76, 58], 'Gb:7/5': [73, 66, 70, 76, 61], 'Gb:7/7': [76, 66, 70, 73, 64], 'G:7': [67, 71, 74, 77, 55], 'G:7/3': [71, 67, 74, 77, 59], 'G:7/5': [74, 67, 71, 77, 62], 'G:7/7': [77, 67, 71, 74, 65], 'G#:7': [68, 72, 75, 78, 56], 'G#:7/3': [72, 68, 75, 78, 60], 'G#:7/5': [75, 68, 72, 78, 63], 'G#:7/7': [78, 68, 72, 75, 66], 'Ab:7': [68, 72, 75, 78, 56], 'Ab:7/3': [72, 68, 75, 78, 60], 'Ab:7/5': [75, 68, 72, 78, 63], 'Ab:7/7': [78, 68, 72, 75, 66], 'A:7': [69, 73, 76, 79, 57], 'A:7/3': [73, 69, 76, 79, 61], 'A:7/5': [76, 69, 73, 79, 64], 'A:7/7': [79, 69, 73, 76, 67], 'A#:7': [70, 74, 77, 80, 58], 'A#:7/3': [74, 70, 77, 80, 62], 'A#:7/5': [77, 70, 74, 80, 65], 'A#:7/7': [80, 70, 74, 77, 68], 'Bb:7': [70, 74, 77, 80, 58], 'Bb:7/3': [74, 70, 77, 80, 62], 'Bb:7/5': [77, 70, 74, 80, 65], 'Bb:7/7': [80, 70, 74, 77, 68], 'B:7': [71, 75, 78, 81, 59], 'B:7/3': [75, 71, 78, 81, 63], 'B:7/5': [78, 71, 75, 81, 66], 'B:7/7': [81, 71, 75, 78, 69], 'C:maj7': [60, 64, 67, 71, 48], 'C:maj7/3': [64, 60, 67, 71, 52], 'C:maj7/5': [67, 60, 64, 71, 55], 'C:maj7/7': [71, 60, 64, 67, 59], 'C#:maj7': [61, 65, 68, 72, 49], 'C#:maj7/3': [65, 61, 68, 72, 53], 'C#:maj7/5': [68, 61, 65, 72, 56], 'C#:maj7/7': [72, 61, 65, 68, 60], 'Db:maj7': [61, 65, 68, 72, 49], 'Db:maj7/3': [65, 61, 68, 72, 53], 'Db:maj7/5': [68, 61, 65, 72, 56], 'Db:maj7/7': [72, 61, 65, 68, 60], 'D:maj7': [62, 66, 69, 73, 50], 'D:maj7/3': [66, 62, 69, 73, 54], 'D:maj7/5': [69, 62, 66, 73, 57], 'D:maj7/7': [73, 62, 66, 69, 61], 'D#:maj7': [63, 67, 70, 74, 51], 'D#:maj7/3': [67, 63, 70, 74, 55], 'D#:maj7/5': [70, 63, 67, 74, 58], 'D#:maj7/7': [74, 63, 67, 70, 62], 'Eb:maj7': [63, 67, 70, 74, 51], 'Eb:maj7/3': [67, 63, 70, 74, 55], 'Eb:maj7/5': [70, 63, 67, 74, 58], 'Eb:maj7/7': [74, 63, 67, 70, 62], 'E:maj7': [64, 68, 71, 75, 52], 'E:maj7/3': [68, 64, 71, 75, 56], 'E:maj7/5': [71, 64, 68, 75, 59], 'E:maj7/7': [75, 64, 68, 71, 63], 'F:maj7': [65, 69, 72, 76, 53], 'F:maj7/3': [69, 65, 72, 76, 57], 'F:maj7/5': [72, 65, 69, 76, 60], 'F:maj7/7': [76, 65, 69, 72, 64], 'F#:maj7': [66, 70, 73, 77, 54], 'F#:maj7/3': [70, 66, 73, 77, 58], 'F#:maj7/5': [73, 66, 70, 77, 61], 'F#:maj7/7': [77, 66, 70, 73, 65], 'Gb:maj7': [66, 70, 73, 77, 54], 'Gb:maj7/3': [70, 66, 73, 77, 58], 'Gb:maj7/5': [73, 66, 70, 77, 61], 'Gb:maj7/7': [77, 66, 70, 73, 65], 'G:maj7': [67, 71, 74, 78, 55], 'G:maj7/3': [71, 67, 74, 78, 59], 'G:maj7/5': [74, 67, 71, 78, 62], 'G:maj7/7': [78, 67, 71, 74, 66], 'G#:maj7': [68, 72, 75, 79, 56], 'G#:maj7/3': [72, 68, 75, 79, 60], 'G#:maj7/5': [75, 68, 72, 79, 63], 'G#:maj7/7': [79, 68, 72, 75, 67], 'Ab:maj7': [68, 72, 75, 79, 56], 'Ab:maj7/3': [72, 68, 75, 79, 60], 'Ab:maj7/5': [75, 68, 72, 79, 63], 'Ab:maj7/7': [79, 68, 72, 75, 67], 'A:maj7': [69, 73, 76, 80, 57], 'A:maj7/3': [73, 69, 76, 80, 61], 'A:maj7/5': [76, 69, 73, 80, 64], 'A:maj7/7': [80, 69, 73, 76, 68], 'A#:maj7': [70, 74, 77, 81, 58], 'A#:maj7/3': [74, 70, 77, 81, 62], 'A#:maj7/5': [77, 70, 74, 81, 65], 'A#:maj7/7': [81, 70, 74, 77, 69], 'Bb:maj7': [70, 74, 77, 81, 58], 'Bb:maj7/3': [74, 70, 77, 81, 62], 'Bb:maj7/5': [77, 70, 74, 81, 65], 'Bb:maj7/7': [81, 70, 74, 77, 69], 'B:maj7': [71, 75, 78, 82, 59], 'B:maj7/3': [75, 71, 78, 82, 63], 'B:maj7/5': [78, 71, 75, 82, 66], 'B:maj7/7': [82, 71, 75, 78, 70], 'C:min7': [60, 63, 67, 70, 48], 'C:min7/3': [63, 60, 67, 70, 51], 'C:min7/5': [67, 60, 63, 70, 55], 'C:min7/7': [70, 60, 63, 67, 58], 'C#:min7': [61, 64, 68, 71, 49], 'C#:min7/3': [64, 61, 68, 71, 52], 'C#:min7/5': [68, 61, 64, 71, 56], 'C#:min7/7': [71, 61, 64, 68, 59], 'Db:min7': [61, 64, 68, 71, 49], 'Db:min7/3': [64, 61, 68, 71, 52], 'Db:min7/5': [68, 61, 64, 71, 56], 'Db:min7/7': [71, 61, 64, 68, 59], 'D:min7': [62, 65, 69, 72, 50], 'D:min7/3': [65, 62, 69, 72, 53], 'D:min7/5': [69, 62, 65, 72, 57], 'D:min7/7': [72, 62, 65, 69, 60], 'D#:min7': [63, 66, 70, 73, 51], 'D#:min7/3': [66, 63, 70, 73, 54], 'D#:min7/5': [70, 63, 66, 73, 58], 'D#:min7/7': [73, 63, 66, 70, 61], 'Eb:min7': [63, 66, 70, 73, 51], 'Eb:min7/3': [66, 63, 70, 73, 54], 'Eb:min7/5': [70, 63, 66, 73, 58], 'Eb:min7/7': [73, 63, 66, 70, 61], 'E:min7': [64, 67, 71, 74, 52], 'E:min7/3': [67, 64, 71, 74, 55], 'E:min7/5': [71, 64, 67, 74, 59], 'E:min7/7': [74, 64, 67, 71, 62], 'F:min7': [65, 68, 72, 75, 53], 'F:min7/3': [68, 65, 72, 75, 56], 'F:min7/5': [72, 65, 68, 75, 60], 'F:min7/7': [75, 65, 68, 72, 63], 'F#:min7': [66, 69, 73, 76, 54], 'F#:min7/3': [69, 66, 73, 76, 57], 'F#:min7/5': [73, 66, 69, 76, 61], 'F#:min7/7': [76, 66, 69, 73, 64], 'Gb:min7': [66, 69, 73, 76, 54], 'Gb:min7/3': [69, 66, 73, 76, 57], 'Gb:min7/5': [73, 66, 69, 76, 61], 'Gb:min7/7': [76, 66, 69, 73, 64], 'G:min7': [67, 70, 74, 77, 55], 'G:min7/3': [70, 67, 74, 77, 58], 'G:min7/5': [74, 67, 70, 77, 62], 'G:min7/7': [77, 67, 70, 74, 65], 'G#:min7': [68, 71, 75, 78, 56], 'G#:min7/3': [71, 68, 75, 78, 59], 'G#:min7/5': [75, 68, 71, 78, 63], 'G#:min7/7': [78, 68, 71, 75, 66], 'Ab:min7': [68, 71, 75, 78, 56], 'Ab:min7/3': [71, 68, 75, 78, 59], 'Ab:min7/5': [75, 68, 71, 78, 63], 'Ab:min7/7': [78, 68, 71, 75, 66], 'A:min7': [69, 72, 76, 79, 57], 'A:min7/3': [72, 69, 76, 79, 60], 'A:min7/5': [76, 69, 72, 79, 64], 'A:min7/7': [79, 69, 72, 76, 67], 'A#:min7': [70, 73, 77, 80, 58], 'A#:min7/3': [73, 70, 77, 80, 61], 'A#:min7/5': [77, 70, 73, 80, 65], 'A#:min7/7': [80, 70, 73, 77, 68], 'Bb:min7': [70, 73, 77, 80, 58], 'Bb:min7/3': [73, 70, 77, 80, 61], 'Bb:min7/5': [77, 70, 73, 80, 65], 'Bb:min7/7': [80, 70, 73, 77, 68], 'B:min7': [71, 74, 78, 81, 59], 'B:min7/3': [74, 71, 78, 81, 62], 'B:min7/5': [78, 71, 74, 81, 66], 'B:min7/7': [81, 71, 74, 78, 69], 'C:dim': [60, 63, 66, 48], 'C:dim/3': [63, 60, 66, 51], 'C:dim/5': [66, 60, 63, 54], 'C#:dim': [61, 64, 67, 49], 'C#:dim/3': [64, 61, 67, 52], 'C#:dim/5': [67, 61, 64, 55], 'Db:dim': [61, 64, 67, 49], 'Db:dim/3': [64, 61, 67, 52], 'Db:dim/5': [67, 61, 64, 55], 'D:dim': [62, 65, 68, 50], 'D:dim/3': [65, 62, 68, 53], 'D:dim/5': [68, 62, 65, 56], 'D#:dim': [63, 66, 69, 51], 'D#:dim/3': [66, 63, 69, 54], 'D#:dim/5': [69, 63, 66, 57], 'Eb:dim': [63, 66, 69, 51], 'Eb:dim/3': [66, 63, 69, 54], 'Eb:dim/5': [69, 63, 66, 57], 'E:dim': [64, 67, 70, 52], 'E:dim/3': [67, 64, 70, 55], 'E:dim/5': [70, 64, 67, 58], 'F:dim': [65, 68, 71, 53], 'F:dim/3': [68, 65, 71, 56], 'F:dim/5': [71, 65, 68, 59], 'F#:dim': [66, 69, 72, 54], 'F#:dim/3': [69, 66, 72, 57], 'F#:dim/5': [72, 66, 69, 60], 'Gb:dim': [66, 69, 72, 54], 'Gb:dim/3': [69, 66, 72, 57], 'Gb:dim/5': [72, 66, 69, 60], 'G:dim': [67, 70, 73, 55], 'G:dim/3': [70, 67, 73, 58], 'G:dim/5': [73, 67, 70, 61], 'G#:dim': [68, 71, 74, 56], 'G#:dim/3': [71, 68, 74, 59], 'G#:dim/5': [74, 68, 71, 62], 'Ab:dim': [68, 71, 74, 56], 'Ab:dim/3': [71, 68, 74, 59], 'Ab:dim/5': [74, 68, 71, 62], 'A:dim': [69, 72, 75, 57], 'A:dim/3': [72, 69, 75, 60], 'A:dim/5': [75, 69, 72, 63], 'A#:dim': [70, 73, 76, 58], 'A#:dim/3': [73, 70, 76, 61], 'A#:dim/5': [76, 70, 73, 64], 'Bb:dim': [70, 73, 76, 58], 'Bb:dim/3': [73, 70, 76, 61], 'Bb:dim/5': [76, 70, 73, 64], 'B:dim': [71, 74, 77, 59], 'B:dim/3': [74, 71, 77, 62], 'B:dim/5': [77, 71, 74, 65], 'C:hdim7': [60, 63, 66, 70, 48], 'C:hdim7/3': [63, 60, 66, 70, 51], 'C:hdim7/5': [66, 60, 63, 70, 54], 'C:hdim7/7': [70, 60, 63, 66, 58], 'C#:hdim7': [61, 64, 67, 71, 49], 'C#:hdim7/3': [64, 61, 67, 71, 52], 'C#:hdim7/5': [67, 61, 64, 71, 55], 'C#:hdim7/7': [71, 61, 64, 67, 59], 'Db:hdim7': [61, 64, 67, 71, 49], 'Db:hdim7/3': [64, 61, 67, 71, 52], 'Db:hdim7/5': [67, 61, 64, 71, 55], 'Db:hdim7/7': [71, 61, 64, 67, 59], 'D:hdim7': [62, 65, 68, 72, 50], 'D:hdim7/3': [65, 62, 68, 72, 53], 'D:hdim7/5': [68, 62, 65, 72, 56], 'D:hdim7/7': [72, 62, 65, 68, 60], 'D#:hdim7': [63, 66, 69, 73, 51], 'D#:hdim7/3': [66, 63, 69, 73, 54], 'D#:hdim7/5': [69, 63, 66, 73, 57], 'D#:hdim7/7': [73, 63, 66, 69, 61], 'Eb:hdim7': [63, 66, 69, 73, 51], 'Eb:hdim7/3': [66, 63, 69, 73, 54], 'Eb:hdim7/5': [69, 63, 66, 73, 57], 'Eb:hdim7/7': [73, 63, 66, 69, 61], 'E:hdim7': [64, 67, 70, 74, 52], 'E:hdim7/3': [67, 64, 70, 74, 55], 'E:hdim7/5': [70, 64, 67, 74, 58], 'E:hdim7/7': [74, 64, 67, 70, 62], 'F:hdim7': [65, 68, 71, 75, 53], 'F:hdim7/3': [68, 65, 71, 75, 56], 'F:hdim7/5': [71, 65, 68, 75, 59], 'F:hdim7/7': [75, 65, 68, 71, 63], 'F#:hdim7': [66, 69, 72, 76, 54], 'F#:hdim7/3': [69, 66, 72, 76, 57], 'F#:hdim7/5': [72, 66, 69, 76, 60], 'F#:hdim7/7': [76, 66, 69, 72, 64], 'Gb:hdim7': [66, 69, 72, 76, 54], 'Gb:hdim7/3': [69, 66, 72, 76, 57], 'Gb:hdim7/5': [72, 66, 69, 76, 60], 'Gb:hdim7/7': [76, 66, 69, 72, 64], 'G:hdim7': [67, 70, 73, 77, 55], 'G:hdim7/3': [70, 67, 73, 77, 58], 'G:hdim7/5': [73, 67, 70, 77, 61], 'G:hdim7/7': [77, 67, 70, 73, 65], 'G#:hdim7': [68, 71, 74, 78, 56], 'G#:hdim7/3': [71, 68, 74, 78, 59], 'G#:hdim7/5': [74, 68, 71, 78, 62], 'G#:hdim7/7': [78, 68, 71, 74, 66], 'Ab:hdim7': [68, 71, 74, 78, 56], 'Ab:hdim7/3': [71, 68, 74, 78, 59], 'Ab:hdim7/5': [74, 68, 71, 78, 62], 'Ab:hdim7/7': [78, 68, 71, 74, 66], 'A:hdim7': [69, 72, 75, 79, 57], 'A:hdim7/3': [72, 69, 75, 79, 60], 'A:hdim7/5': [75, 69, 72, 79, 63], 'A:hdim7/7': [79, 69, 72, 75, 67], 'A#:hdim7': [70, 73, 76, 80, 58], 'A#:hdim7/3': [73, 70, 76, 80, 61], 'A#:hdim7/5': [76, 70, 73, 80, 64], 'A#:hdim7/7': [80, 70, 73, 76, 68], 'Bb:hdim7': [70, 73, 76, 80, 58], 'Bb:hdim7/3': [73, 70, 76, 80, 61], 'Bb:hdim7/5': [76, 70, 73, 80, 64], 'Bb:hdim7/7': [80, 70, 73, 76, 68], 'B:hdim7': [71, 74, 77, 81, 59], 'B:hdim7/3': [74, 71, 77, 81, 62], 'B:hdim7/5': [77, 71, 74, 81, 65], 'B:hdim7/7': [81, 71, 74, 77, 69], 'C:sus2': [60, 62, 67, 48], 'C:sus4': [60, 65, 67, 48], 'C#:sus2': [61, 63, 68, 49], 'C#:sus4': [61, 66, 68, 49], 'D:sus2': [62, 64, 69, 50], 'D:sus4': [62, 67, 69, 50], 'D#:sus2': [63, 65, 70, 51], 'D#:sus4': [63, 68, 70, 51], 'E:sus2': [64, 66, 71, 52], 'E:sus4': [64, 69, 71, 52], 'F:sus2': [65, 67, 72, 53], 'F:sus4': [65, 70, 72, 53], 'F#:sus2': [66, 68, 73, 54], 'F#:sus4': [66, 71, 73, 54], 'G:sus2': [67, 69, 74, 55], 'G:sus4': [67, 72, 74, 55], 'G#:sus2': [68, 70, 75, 56], 'G#:sus4': [68, 73, 75, 56], 'A:sus2': [69, 71, 76, 57], 'A:sus4': [69, 74, 76, 57], 'A#:sus2': [70, 72, 77, 58], 'A#:sus4': [70, 75, 77, 58], 'B:sus2': [71, 73, 78, 59], 'B:sus4': [71, 76, 78, 59], 'Db:sus2': [61, 63, 68, 49], 'Db:sus4': [61, 66, 68, 49], 'Eb:sus2': [63, 65, 70, 51], 'Eb:sus4': [63, 68, 70, 51], 'Gb:sus2': [66, 68, 73, 54], 'Gb:sus4': [66, 71, 73, 54], 'Ab:sus2': [68, 70, 75, 56], 'Ab:sus4': [68, 73, 75, 56], 'Bb:sus2': [70, 72, 77, 58], 'Bb:sus4': [70, 75, 77, 58], 'C:aug': [60, 64, 68, 48], 'C#:aug': [61, 65, 69, 49], 'Db:aug': [61, 65, 69, 49], 'D:aug': [62, 66, 70, 50], 'D#:aug': [63, 67, 71, 51], 'Eb:aug': [63, 67, 71, 51], 'E:aug': [64, 68, 72, 52], 'F:aug': [65, 69, 73, 53], 'F#:aug': [66, 70, 74, 54], 'Gb:aug': [66, 70, 74, 54], 'G:aug': [67, 71, 75, 55], 'G#:aug': [68, 72, 76, 56], 'Ab:aug': [68, 72, 76, 56], 'A:aug': [69, 73, 77, 57], 'A#:aug': [70, 74, 78, 58], 'Bb:aug': [70, 74, 78, 58], 'B:aug': [71, 75, 79, 59]}
    return chord_map.get(chord, [60])

def convert_chords_to_midi(chords: List[Chord], bpm: float, save_path: Path):
    mid = MidiFile()
    track = MidiTrack()
    mid.tracks.append(track)

    track.append(MetaMessage('set_tempo', tempo=mido.bpm2tempo(bpm)))
    previous_no_chord = False
    for i, chord in enumerate(chords):
        if chord.value == 'N':
            previous_no_chord = True
            continue
        elif i == 0:
            start_tick = second2tick(chord.time, TICKS_PER_BEAT, mido.bpm2tempo(bpm))
        elif previous_no_chord:
            start_tick = second2tick(chords[i - 1].duration, TICKS_PER_BEAT, mido.bpm2tempo(bpm))
        else:
            start_tick = 0

        previous_no_chord = False
        duration_tick = second2tick(chord.duration, TICKS_PER_BEAT, mido.bpm2tempo(bpm))

        notes = chord_to_midi_notes(chord.value)

        # コードを鳴らす
        for i, note in enumerate(notes):
            if i == 0:
                track.append(Message('note_on', note=note, velocity=100, time=start_tick))
            else:
                track.append(Message('note_on', note=note, velocity=100, time=0))
        
        # コードを止める
        for i, note in enumerate(notes):
            if i == 0:
                track.append(Message('note_off', note=note, velocity=100, time=duration_tick))
            else:
                track.append(Message('note_off', note=note, velocity=100, time=0))
    
    mid.save(save_path)
            